package mvc.controllerview;

import entity.Cliente;
import entity.Hospedagem;
import entity.Quarto;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mvc.model.dao.ClienteDAO;
import mvc.model.dao.HospedagemDAO;
import mvc.model.dao.QuartoDAO;
import myutils.DateCustomizer;
import myutils.Notificacao;

public class FormCadastroHospedagem extends javax.swing.JFrame {

    private Hospedagem hospedagem = null;
    public static Quarto quartoSelecionado = null;
    private Cliente cliente = null;
    private Notificacao notificacao = new Notificacao();

    public FormCadastroHospedagem() {
        initComponents();
        hospedagem = new Hospedagem();
        hospedagem.setDataLocacao(new Date());
        tformatadoDataEntrada.setText(
                    DateCustomizer.DateToStr(new Date())
                );
        
        if (quartoSelecionado != null) {
            hospedagem.setQuartoAlugado(quartoSelecionado);
            tfQuarto.setText(quartoSelecionado.getObservacao());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btGravar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        lbCodigo = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        jPanelValores = new javax.swing.JPanel();
        lbDesconto = new javax.swing.JLabel();
        tfDesconto = new javax.swing.JTextField();
        lbTotal = new javax.swing.JLabel();
        tfValorTotalReserva = new javax.swing.JTextField();
        btCalcularTotal = new javax.swing.JButton();
        lbPorcento = new javax.swing.JLabel();
        jPanelQuarto = new javax.swing.JPanel();
        lbQuartoSelecionadoNome = new javax.swing.JLabel();
        tfQuarto = new javax.swing.JTextField();
        lbQuartos = new javax.swing.JLabel();
        tfBuscarQuarto = new javax.swing.JTextField();
        btBuscarQuarto = new javax.swing.JButton();
        btBuscarTodosQuartos = new javax.swing.JButton();
        btIncluirQuarto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableQuartoDaReserva = new javax.swing.JTable();
        jPanelCliente = new javax.swing.JPanel();
        lbCliente = new javax.swing.JLabel();
        tfNomeCliente = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        tfLocalizaClienteCodigo = new javax.swing.JTextField();
        btLocaizaClienteCodigo = new javax.swing.JButton();
        tformatadoCpf = new javax.swing.JFormattedTextField();
        btLocalizaClienteCpf = new javax.swing.JButton();
        btBuscarTodosClientes1 = new javax.swing.JButton();
        btIncluir = new javax.swing.JButton();
        lbLocalizaClienteCodigo = new javax.swing.JLabel();
        tformatadoDataEntrada = new javax.swing.JFormattedTextField();
        lbDataEntrada = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        btGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/24x24/Save.png"))); // NOI18N
        btGravar.setText("Gravar");
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });

        btSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/24x24/Close.png"))); // NOI18N
        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        lbCodigo.setText("Código");

        tfCodigo.setEnabled(false);

        jPanelValores.setBorder(javax.swing.BorderFactory.createTitledBorder("Valores"));

        lbDesconto.setText("Desconto:");

        tfDesconto.setText("0");

        lbTotal.setText("Valor Total da Diária:");

        tfValorTotalReserva.setEnabled(false);

        btCalcularTotal.setText("Cal. Total");
        btCalcularTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCalcularTotalActionPerformed(evt);
            }
        });

        lbPorcento.setText("%");

        javax.swing.GroupLayout jPanelValoresLayout = new javax.swing.GroupLayout(jPanelValores);
        jPanelValores.setLayout(jPanelValoresLayout);
        jPanelValoresLayout.setHorizontalGroup(
            jPanelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelValoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbDesconto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbPorcento)
                .addGap(18, 18, 18)
                .addComponent(btCalcularTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTotal)
                .addGap(36, 36, 36)
                .addComponent(tfValorTotalReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelValoresLayout.setVerticalGroup(
            jPanelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelValoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbDesconto)
                        .addComponent(tfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btCalcularTotal)
                        .addComponent(lbPorcento))
                    .addGroup(jPanelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbTotal)
                        .addComponent(tfValorTotalReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanelQuarto.setBorder(javax.swing.BorderFactory.createTitledBorder("Quarto"));

        lbQuartoSelecionadoNome.setText("Quarto:");

        tfQuarto.setEditable(false);

        lbQuartos.setText("Código");

        btBuscarQuarto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/24x24/buscar.png"))); // NOI18N
        btBuscarQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarQuartoActionPerformed(evt);
            }
        });

        btBuscarTodosQuartos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/24x24/Search.png"))); // NOI18N
        btBuscarTodosQuartos.setText("Buscar Todos");
        btBuscarTodosQuartos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarTodosQuartosActionPerformed(evt);
            }
        });

        btIncluirQuarto.setText("Incluir");
        btIncluirQuarto.setEnabled(false);
        btIncluirQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirQuartoActionPerformed(evt);
            }
        });

        jTableQuartoDaReserva.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Tipo Quarto", "Status", "Valor", "Descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableQuartoDaReserva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableQuartoDaReservaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableQuartoDaReserva);
        jTableQuartoDaReserva.getColumnModel().getColumn(0).setResizable(false);
        jTableQuartoDaReserva.getColumnModel().getColumn(1).setResizable(false);
        jTableQuartoDaReserva.getColumnModel().getColumn(2).setResizable(false);
        jTableQuartoDaReserva.getColumnModel().getColumn(3).setResizable(false);
        jTableQuartoDaReserva.getColumnModel().getColumn(4).setResizable(false);

        javax.swing.GroupLayout jPanelQuartoLayout = new javax.swing.GroupLayout(jPanelQuarto);
        jPanelQuarto.setLayout(jPanelQuartoLayout);
        jPanelQuartoLayout.setHorizontalGroup(
            jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuartoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelQuartoLayout.createSequentialGroup()
                        .addComponent(lbQuartoSelecionadoNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelQuartoLayout.createSequentialGroup()
                        .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanelQuartoLayout.createSequentialGroup()
                                .addComponent(lbQuartos)
                                .addGap(8, 8, 8)
                                .addComponent(tfBuscarQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btBuscarQuarto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btBuscarTodosQuartos))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btIncluirQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanelQuartoLayout.setVerticalGroup(
            jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelQuartoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btBuscarTodosQuartos, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBuscarQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbQuartos)
                        .addComponent(tfBuscarQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelQuartoLayout.createSequentialGroup()
                        .addComponent(btIncluirQuarto)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelQuartoLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanelQuartoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbQuartoSelecionadoNome)
                            .addComponent(tfQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3))))
        );

        jPanelCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        lbCliente.setText("Cliente: ");

        tfNomeCliente.setEditable(false);
        tfNomeCliente.setEnabled(false);

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF", "RG", "Cidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableClientes);

        btLocaizaClienteCodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/24x24/Search_1.png"))); // NOI18N
        btLocaizaClienteCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLocaizaClienteCodigoActionPerformed(evt);
            }
        });

        try {
            tformatadoCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tformatadoCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tformatadoCpfActionPerformed(evt);
            }
        });

        btLocalizaClienteCpf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/24x24/Search_1.png"))); // NOI18N
        btLocalizaClienteCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLocalizaClienteCpfActionPerformed(evt);
            }
        });

        btBuscarTodosClientes1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/24x24/Search.png"))); // NOI18N
        btBuscarTodosClientes1.setText("BuscarTodos");
        btBuscarTodosClientes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarTodosClientes1ActionPerformed(evt);
            }
        });

        btIncluir.setText("Incluir");
        btIncluir.setEnabled(false);
        btIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirActionPerformed(evt);
            }
        });

        lbLocalizaClienteCodigo.setText("Código");

        javax.swing.GroupLayout jPanelClienteLayout = new javax.swing.GroupLayout(jPanelCliente);
        jPanelCliente.setLayout(jPanelClienteLayout);
        jPanelClienteLayout.setHorizontalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addComponent(lbCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanelClienteLayout.createSequentialGroup()
                                .addComponent(lbLocalizaClienteCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfLocalizaClienteCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btLocaizaClienteCodigo)
                                .addGap(34, 34, 34)
                                .addComponent(tformatadoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btLocalizaClienteCpf)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btBuscarTodosClientes1))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btIncluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelClienteLayout.setVerticalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClienteLayout.createSequentialGroup()
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClienteLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btBuscarTodosClientes1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelClienteLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btLocalizaClienteCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tformatadoCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btLocaizaClienteCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(jPanelClienteLayout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tfLocalizaClienteCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbLocalizaClienteCodigo)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClienteLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelClienteLayout.createSequentialGroup()
                        .addComponent(btIncluir)
                        .addGap(54, 54, 54)))
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCliente)
                    .addComponent(tfNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        try {
            tformatadoDataEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tformatadoDataEntrada.setEnabled(false);

        lbDataEntrada.setText("Data Entrada: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbCodigo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tformatadoDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDataEntrada)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(417, 417, 417)
                                .addComponent(btSair))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanelQuarto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanelValores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCodigo)
                    .addComponent(lbDataEntrada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tformatadoDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelValores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSair, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-631)/2, (screenSize.height-679)/2, 631, 679);
    }// </editor-fold>//GEN-END:initComponents

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btSairActionPerformed

    private void btCalcularTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCalcularTotalActionPerformed
        if (hospedagem != null) {
            hospedagem.setDesconto(Float.parseFloat(tfDesconto.getText()));
            tfValorTotalReserva.setText(
                        Float.toString(hospedagem.calcularValor())
                    );
        } else {
            notificacao.exibir("Selecione primeiro um quarto!", Notificacao.ERRO);
        }                      
    }//GEN-LAST:event_btCalcularTotalActionPerformed

    private void btBuscarTodosQuartosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarTodosQuartosActionPerformed
        limparTabelaQuarto();
        DefaultTableModel modelo = (DefaultTableModel)jTableQuartoDaReserva.getModel();
        
        try {
            QuartoDAO quartoDAO = new QuartoDAO();
            ArrayList<Quarto> listaQuarto = (ArrayList<Quarto>) quartoDAO.buscarTodos();

            if (!listaQuarto.isEmpty()) {
                for (Quarto quarto: listaQuarto) {
                    modelo.addRow(quarto.getDadosEmVetor());
                }
            } else {
                notificacao.exibir("Nenhum Quarto Encontrado.", Notificacao.ERRO);
            }
        } catch (IOException ex) {
            Logger.getLogger(FormCadastroHospedagem.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_btBuscarTodosQuartosActionPerformed

    private void jTableQuartoDaReservaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableQuartoDaReservaMouseClicked
        btIncluirQuarto.setEnabled(true);
    }//GEN-LAST:event_jTableQuartoDaReservaMouseClicked

    private void btIncluirQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirQuartoActionPerformed
        int linha = jTableQuartoDaReserva.getSelectedRow();
        btIncluirQuarto.setEnabled(false);
        
        try {
            QuartoDAO quartoDAO = new QuartoDAO();
            quartoSelecionado  = quartoDAO.buscar(
                    (String)jTableQuartoDaReserva.getModel().getValueAt(linha, 0)
                );
            if (quartoSelecionado != null) {
                quartoSelecionado.setStatus(false);
                hospedagem.setQuartoAlugado(quartoSelecionado);
                tfQuarto.setText(quartoSelecionado.getObservacao());
                limparTabelaQuarto();            
            } else {
                notificacao.exibir("Selecione um quarto para incluir!", Notificacao.ERRO);
            }        
        } catch (IOException ex) {
            Logger.getLogger(FormCadastroHospedagem.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_btIncluirQuartoActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

    }//GEN-LAST:event_formFocusGained

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed
        hospedagem.setHospede(cliente);
        hospedagem.setQuartoAlugado(quartoSelecionado);
        hospedagem.setDesconto(Float.parseFloat(tfDesconto.getText()));
        
        try {
            quartoSelecionado.setStatus(true);
            QuartoDAO quartoDAO = new QuartoDAO();
            quartoDAO.atualizar(quartoSelecionado.getCodigo(), quartoSelecionado);
        } catch (IOException ex) {
            Logger.getLogger(FormCadastroHospedagem.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        try {
            HospedagemDAO hospedagemDAO = new HospedagemDAO();
            hospedagemDAO.inserir(hospedagem);
            notificacao.exibir("Hospedagem "+ tfCodigo.getText()  
                               + " realizada com sucesso", Notificacao.SUCESSO);
        } catch (IOException ex) {
            Logger.getLogger(FormCadastroHospedagem.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            limparForm();
        } catch (IOException ex) {
            Logger.getLogger(FormCadastroHospedagem.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btGravarActionPerformed

    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        btIncluir.setEnabled(true);
    }//GEN-LAST:event_jTableClientesMouseClicked

    private void btLocaizaClienteCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLocaizaClienteCodigoActionPerformed
        btIncluir.setEnabled(false);
        limparTabelaCliente();

        try {
            ClienteDAO clienteDAO = new ClienteDAO();
            String codigo = tfLocalizaClienteCodigo.getText();
            cliente = clienteDAO.buscar(codigo);
            if (cliente != null) {
                DefaultTableModel modelo = (DefaultTableModel)jTableClientes.getModel();
                modelo.addRow(cliente.getDadosEmVetor());
            } else {
                notificacao.exibir("Nenhum cliente encontrado.", Notificacao.ERRO);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR", ""+ex, ERROR);
        }
    }//GEN-LAST:event_btLocaizaClienteCodigoActionPerformed

    private void btLocalizaClienteCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLocalizaClienteCpfActionPerformed
        btIncluir.setEnabled(false);
        limparTabelaCliente();

        try {
            ClienteDAO clienteDAO = new ClienteDAO();
            String cpf = tformatadoCpf.getText();
            cliente = clienteDAO.buscarPorCpf(cpf);
            if (cliente != null) {
                DefaultTableModel modelo = (DefaultTableModel)jTableClientes.getModel();
                modelo.addRow(cliente.getDadosEmVetor());
            } else {
                notificacao.exibir("Nenhum cliente encontrado.", Notificacao.ERRO);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR", ""+ex, ERROR);
        }
    }//GEN-LAST:event_btLocalizaClienteCpfActionPerformed

    private void btBuscarTodosClientes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarTodosClientes1ActionPerformed
        btIncluir.setEnabled(false);
        limparTabelaCliente();
        tfLocalizaClienteCodigo.setText("");
        tformatadoCpf.setText("");
        DefaultTableModel modelo = (DefaultTableModel)jTableClientes.getModel();

        ArrayList<Cliente> listaCliente = null;
        try {
            ClienteDAO clienteDAO = new ClienteDAO();
            listaCliente = (ArrayList<Cliente>) clienteDAO.buscarTodos();
            if(!listaCliente.isEmpty()) {
                for(Cliente clienteDaLista : listaCliente) {
                    modelo.addRow(clienteDaLista.getDadosEmVetor());
                }
            } else {
                notificacao.exibir("Nenhum cliente encontrado.", Notificacao.ERRO);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "ERROR", ""+ex, ERROR);
        }
    }//GEN-LAST:event_btBuscarTodosClientes1ActionPerformed

    private void btIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirActionPerformed
        int linha = jTableClientes.getSelectedRow();

        try {
            ClienteDAO clienteDAO = new ClienteDAO();
            Cliente clienteSelecionado  = clienteDAO.buscar(
                jTableClientes.getModel().getValueAt(linha, 0).toString()
            );
            tfNomeCliente.setText(clienteSelecionado.getNome());
            if (clienteSelecionado != null) {
                
            } else {
                notificacao.exibir("Busque e selecione um cliente antes!", Notificacao.ERRO);
            }
            
            cliente = clienteSelecionado;
            limparTabelaCliente();

        } catch (IOException ex) {
            Logger.getLogger(FormCadastroHospedagem.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btIncluirActionPerformed

    private void tformatadoCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tformatadoCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tformatadoCpfActionPerformed

    private void btBuscarQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarQuartoActionPerformed
        btIncluir.setEnabled(false);
        limparTabelaQuarto();
        String codigoDoQuarto = tfBuscarQuarto.getText();
        DefaultTableModel modelo = (DefaultTableModel)jTableQuartoDaReserva.getModel();
        
        try {
            QuartoDAO quartoDAO = new QuartoDAO();
            Quarto quartoBuscado = quartoDAO.buscar(codigoDoQuarto);
            if (quartoBuscado != null) {
                modelo.addRow(quartoBuscado.getDadosEmVetor());
            } else {
                notificacao.exibir("Quarto com código " + codigoDoQuarto
                        + " não encontrado" , Notificacao.ERRO);
            }
        } catch (IOException ex) {
            Logger.getLogger(FormCadastroHospedagem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btBuscarQuartoActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        quartoSelecionado = null;
    }//GEN-LAST:event_formWindowClosed

    private void limparTabelaQuarto()
    {
        DefaultTableModel modelo = (DefaultTableModel)jTableQuartoDaReserva.getModel();
        for (int i = jTableQuartoDaReserva.getRowCount() - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
    
    private void limparTabelaCliente()
    {
        DefaultTableModel modelo = (DefaultTableModel)jTableClientes.getModel();
        for (int i = jTableClientes.getRowCount() - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void limparForm() throws IOException
    {
        limparTabelaQuarto();
        limparTabelaCliente();
        tfLocalizaClienteCodigo.setText("");
        tformatadoCpf.setText("");
        tfNomeCliente.setText("");
        tfQuarto.setText("");
        tfBuscarQuarto.setText("");
        tfValorTotalReserva.setText("");
        tfDesconto.setText("0");
        tfCodigo.setText(String.valueOf(new HospedagemDAO().getIndex()));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscarQuarto;
    private javax.swing.JButton btBuscarTodosClientes1;
    private javax.swing.JButton btBuscarTodosQuartos;
    private javax.swing.JButton btCalcularTotal;
    private javax.swing.JButton btGravar;
    private javax.swing.JButton btIncluir;
    private javax.swing.JButton btIncluirQuarto;
    private javax.swing.JButton btLocaizaClienteCodigo;
    private javax.swing.JButton btLocalizaClienteCpf;
    private javax.swing.JButton btSair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanelCliente;
    private javax.swing.JPanel jPanelQuarto;
    private javax.swing.JPanel jPanelValores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTable jTableQuartoDaReserva;
    private javax.swing.JLabel lbCliente;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbDataEntrada;
    private javax.swing.JLabel lbDesconto;
    private javax.swing.JLabel lbLocalizaClienteCodigo;
    private javax.swing.JLabel lbPorcento;
    private javax.swing.JLabel lbQuartoSelecionadoNome;
    private javax.swing.JLabel lbQuartos;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JTextField tfBuscarQuarto;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfDesconto;
    private javax.swing.JTextField tfLocalizaClienteCodigo;
    private javax.swing.JTextField tfNomeCliente;
    private javax.swing.JTextField tfQuarto;
    private javax.swing.JTextField tfValorTotalReserva;
    private javax.swing.JFormattedTextField tformatadoCpf;
    private javax.swing.JFormattedTextField tformatadoDataEntrada;
    // End of variables declaration//GEN-END:variables
}
